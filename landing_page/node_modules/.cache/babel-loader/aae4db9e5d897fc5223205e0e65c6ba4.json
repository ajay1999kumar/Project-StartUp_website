{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Project-StartUp_website\\\\landing_page\\\\src\\\\components\\\\CourseSpecificationTable\\\\SpecificationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport useTable from 'react-table';\nimport data from './data';\nimport { COLUMNS } from './columns';\nexport const SpecificationTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => data, []);\n  const TableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = TableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.headerGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProp(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SpecificationTable, \"Oa7i6BsNZj/M9ib1ZVsjTWCTQkU=\", false, function () {\n  return [useTable];\n});\n\n_c = SpecificationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificationTable\");","map":{"version":3,"sources":["D:/Project-StartUp_website/landing_page/src/components/CourseSpecificationTable/SpecificationTable.js"],"names":["React","useMemo","useTable","data","COLUMNS","SpecificationTable","columns","TableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","headerGroupProps","headers","column","getHeaderProp","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACrC,QAAMC,OAAO,GAACL,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAArB;AACA,QAAMD,IAAI,GAACF,OAAO,CAAC,MAAME,IAAP,EAAa,EAAb,CAAlB;AAEA,QAAMI,aAAa,GAACL,QAAQ,CAAC;AACzBI,IAAAA,OADyB;AAEzBH,IAAAA;AAFyB,GAAD,CAA5B;AAKA,QAAK;AACDK,IAAAA,aADC;AAEDC,IAAAA,iBAFC;AAGDC,IAAAA,YAHC;AAIDC,IAAAA,IAJC;AAKDC,IAAAA;AALC,MAMHL,aANF;AAQC,sBACI;AAAA,2BACI,sBAAWC,aAAa,EAAxB;AAAA,8BACI;AAAA,kBAEQE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACb,mBAAQA,WAAW,CAACC,gBAAZ,EAAR;AAAA,oBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACrB,mBAAQA,MAAM,CAACC,aAAP,EAAR;AAAA,sBAAiCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI,sBAAWV,iBAAiB,EAA5B;AAAA,kBAEIE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAO;AACZR,UAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,8BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBAEQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAQ;AAClB,kCACI,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADJ;AAIH,aALD;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAcH,SAhBD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CA/DM;;GAAMd,kB;UAIUH,Q;;;KAJVG,kB","sourcesContent":["import React, {useMemo} from 'react';\r\nimport useTable from 'react-table';\r\nimport data from './data';\r\nimport {COLUMNS} from './columns';\r\n\r\nexport const SpecificationTable = () => {\r\n   const columns=useMemo(() => COLUMNS, [])\r\n   const data=useMemo(() => data, [])\r\n\r\n   const TableInstance=useTable({\r\n       columns,\r\n       data\r\n   })\r\n\r\n   const{\r\n       getTableProps,\r\n       getTableBodyProps,\r\n       headerGroups,\r\n       rows,\r\n       prepareRow,\r\n   }=TableInstance\r\n\r\n    return (\r\n        <div>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {\r\n                        headerGroups.map((headerGroup)=>(\r\n                            <tr {...headerGroup.headerGroupProps()}>\r\n                                {headerGroup.headers.map((column) => (\r\n                                    <th {...column.getHeaderProp()}>{column.render('Header')}</th>\r\n\r\n                                ))}\r\n                            \r\n                        </tr>\r\n                        ))\r\n                    }\r\n                   \r\n\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                    rows.map((row)=>{\r\n                        prepareRow(row)\r\n                        return(\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map((cell)=>{\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n\r\n                                        )\r\n                                    })\r\n                                }\r\n                        \r\n                             </tr>\r\n\r\n                        )\r\n                    })\r\n                    }\r\n                \r\n                   \r\n\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}